theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(title, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = title, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(Concentration, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = Concentration, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(antibiotic, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = antibiotic, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
FreqMuts5 <- both_mutations %>%
group_by(gene_name) %>%
summarise(n = n()) %>%
filter(n > 2) %>%
select(gene_name) %>%
pull
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(antibiotic, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = antibiotic, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(title, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = title, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(Concentration, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = Concentration, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(title, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = title, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(Concentration, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = Concentration, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(antibiotic, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = antibiotic, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
FreqMuts5 <- both_mutations %>%
group_by(gene_name) %>%
summarise(n = n()) %>%
filter(n > 3) %>%
select(gene_name) %>%
pull
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(antibiotic, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = antibiotic, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(title, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = title, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(Concentration, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = Concentration, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(title, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = title, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(Concentration, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = Concentration, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(antibiotic, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = antibiotic, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
FreqMuts5 <- both_mutations %>%
group_by(gene_name) %>%
summarise(n = n()) %>%
filter(n > 4) %>%
select(gene_name) %>%
pull
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(antibiotic, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = antibiotic, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(title, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = title, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(Concentration, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = Concentration, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(title, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = title, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(Concentration, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = Concentration, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts) %>%
group_by(antibiotic, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = antibiotic, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
FreqMuts5 <- both_mutations %>%
group_by(gene_name) %>%
summarise(n = n()) %>%
filter(n > 5) %>%
select(gene_name) %>%
pull
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(antibiotic, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = antibiotic, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(title, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = title, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
both_mutations %>%
filter(gene_name %in% FreqMuts5) %>%
group_by(Concentration, gene_name) %>%
summarise(n = n()) %>%
ggplot(aes(x = Concentration, y = gene_name, fill = n)) +
geom_tile() +
theme_classic() +
#theme(axis.text.x = element_text(angle = 90)) +
NULL
View(both_mutations)
write.csv(both_mutations,"C:\Users\ELEANOR\Desktop\Pathfinder\BreseqOutput\index files\polymorphs\\psl1and4polymorphdata.csv", row.names = FALSE)
write.csv(both_mutations,"C:\\Users\ELEANOR\Desktop\Pathfinder\BreseqOutput\index files\polymorphs\\psl1and4polymorphdata.csv", row.names = FALSE)
write.csv(both_mutations,"C:\\Users\\ELEANOR\Desktop\Pathfinder\BreseqOutput\index files\polymorphs\\psl1and4polymorphdata.csv", row.names = FALSE)
write.csv(both_mutations,"C:\\Users\\ELEANOR\\Desktop\Pathfinder\BreseqOutput\index files\polymorphs\\psl1and4polymorphdata.csv", row.names = FALSE)
write.csv(both_mutations,"C:\\Users\\ELEANOR\\Desktop\\Pathfinder\\BreseqOutput\\index files\\polymorphs\\psl1and4polymorphdata.csv", row.names = FALSE)
library(knitr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE)
library(tidyverse)
library(lmtest)
library(sandwich)
library(plotROC)
#install.packages("glmnet")
library(glmnet)
knitr::opts_chunk$set(echo = TRUE)
rename <- function(X)(str_replace(X, X, substring(X, 2, 5)))
population_growth_data <- population_growth_data %>%
dplyr::rename(Country = ?..Country.Name) %>%
rename_at(vars(starts_with("X")), rename) %>%
select(-contains("."))
food_consumption_data <- read.csv("food_consumption.csv")
population_growth_data <- read.csv("population_data.csv")
head(food_consumption_data)
head(population_growth_data)
rename <- function(X)(str_replace(X, X, substring(X, 2, 5)))
population_growth_data <- population_growth_data %>%
dplyr::rename(Country = ?..Country.Name) %>%
rename_at(vars(starts_with("X")), rename) %>%
select(-contains("."))
library(tidyverse)
rename <- function(X)(str_replace(X, X, substring(X, 2, 5)))
population_growth_data <- population_growth_data %>%
dplyr::rename(Country = ?..Country.Name) %>%
rename_at(vars(starts_with("X")), rename) %>%
select(-contains("."))
rename <- function(X)(str_replace(X, X, substring(X, 2, 5)))
population_growth_data <- population_growth_data %>%
rename(Country = ?..Country.Name) %>%
rename_at(vars(starts_with("X")), rename) %>%
select(-contains("."))
View(population_growth_data)
population_growth_data <- population_growth_data %>%
rename(Country = ?..Country.Name) #%>%
population_growth_data <- population_growth_data %>%
rename(?..Country.Name) #%>%
population_growth_data <- population_growth_data %>%
dplyr::rename(Country = ?..Country.Name) #%>%
population_growth_data %>% colnames()
colnames <- population_growth_data %>% colnames()
colnames <- population_growth_data %>% colnames() %>% pull
colnames <- population_growth_data %>% colnames
population_growth_data <- population_growth_data %>%
dplyr::rename(Country = colnames[1]) #%>%
renameX <- function(X)(str_replace(X, X, substring(X, 2, 5)))
colnames <- population_growth_data %>% colnames
population_growth_data <- population_growth_data %>%
dplyr::rename(Country = colnames[1]) %>%
rename_at(vars(starts_with("X")), renameX) %>%
select(-contains("."))
head(population_growth_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
food_consumption_data <- read.csv("food_consumption.csv")
population_growth_data <- read.csv("population_data.csv")
head(food_consumption_data)
head(population_growth_data)
renameX <- function(X)(str_replace(X, X, substring(X, 2, 5)))
colnames <- population_growth_data %>% colnames
population_growth_data <- population_growth_data %>%
dplyr::rename(Country = colnames[1]) %>%
rename_at(vars(starts_with("X")), renameX) %>%
select(-contains("."))
head(population_growth_data)
population_growth_data <- population_growth_data %>%
pivot_longer(-c("Country"), names_to = "Year", values_to = "Population")
head(population_growth_data)
food_consumption_data %>%
pivot_wider(names_from = "food_category", values_from = c("consumption", "co2_emmission")) %>%
pivot_longer(-c("country"), names_to = "food_category", values_to = "value") %>%
separate(food_category,into = c("metric","food_category"), sep="_") %>%
glimpse()
#pivot_wider(names_from = "metric", values_from = "temp")
data <- inner_join(population_growth_data, food_consumption_data, c("Country" = "country"))
head(data)
length(unique(population_growth_data$Country))
length(unique(food_consumption_data$country))
length(intersect((unique(population_growth_data$Country)), (unique(food_consumption_data$country))))
#anti_join(population_growth_data, food_consumption_data, c("Country" = "country")) %>% select(Country) %>% unique()
#count na function
countna <- function(x)sum(is.na(x))
# add catagorical variable: decade
makedecade <- function(X){
case_when(
substring(X, 3, 3) == 1 ~ 2010,
substring(X, 3, 3) == 2 ~ 2020,
substring(X, 3, 3) == 3 ~ 2030,
substring(X, 3, 3) == 4 ~ 2040,
substring(X, 3, 3) == 5 ~ 2050
)
}
data <- data %>% mutate(Decade = makedecade(Year))
#make sure all "numeric" variables are really numeric
data <- data %>%
mutate_at(vars(2,5,6), as.numeric) %>%
mutate(Population = as.numeric(as.character(Population))) %>%
glimpse()
#make total consumption and total co2 variables
data <- data %>% mutate(
#Population = as.numeric(as.character(Population)),
total_consumption = consumption * Population,
total_co2 = co2_emmission * Population) %>%
dplyr::rename(rate_consumption = consumption,
rate_co2 = co2_emmission)
countna(data$total_co2)
countna(data$total_consumption)
length(data$total_co2)
length(data$total_consumption)
# filter goes by rows
# select goes by column
data2 <- data %>%
group_by(food_category) %>%
filter(Year == "2020") %>%
drop_na() %>%
select(rate_co2, total_co2) %>%
summarise_each(funs(min = min,
q25 = quantile(., 0.25),
median = median,
q75 = quantile(., 0.75),
max = max,
mean = mean,
sd = sd))
data3 <- data %>%
drop_na() %>%
group_by(Country, Decade) %>%
select(total_consumption, rate_consumption, total_co2, rate_co2) %>%
summarise_each(funs(sum = sum))
data4 <- data %>%
drop_na() %>%
group_by(Country) %>%
select(rate_consumption, total_consumption) %>%
summarise_each(funs(median = median,
mean = mean,
sd = sd)) %>%
arrange(desc(rate_consumption_mean))
data5 <- data %>%
drop_na() %>%
group_by(Country) %>%
select(rate_co2, total_co2) %>%
summarise_each(funs(median = median,
mean = mean,
sd = sd)) %>%
arrange(desc(rate_co2_mean))
print(data2)
print(data3)
print(data4)
print(data5)
df<-data%>%na.omit%>%select_if(is.numeric)%>%select(-c("Decade"))
cor(df)
tidycor<-cor(df)%>%
as.data.frame%>%
rownames_to_column%>%
pivot_longer(-1,names_to="name",values_to="correlation")
head(tidycor)
tidycor%>%ggplot(aes(rowname,name,fill=correlation))+  geom_tile()+  scale_fill_gradient2(low="red",mid="white",high="blue")+
geom_text(aes(label=round(correlation,2)),color = "black", size = 4)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
coord_fixed()
#graph showing each country's percentage food category from total consumption
#graph showing total consumption or co2 over year for the top 5 or 10
#boxplot of consumption and co2 rate in the year 2020, facet by food category
temp <- data %>% group_by(Country) %>% summarise(
sum = sum(total_consumption)) %>%
arrange(desc(sum)) %>%
pull(Country)
data%>% group_by(Country) %>% filter(Year == 2020) %>% filter(Country %in% temp[1:10]) %>%
ggplot(aes(x = Country, y = total_consumption)) +
geom_bar(stat = "identity", aes(fill = food_category)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
temp <- data %>% group_by(Country) %>%
summarise(sum = sum(rate_consumption)) %>%
arrange(desc(sum)) %>%
pull(Country)
data%>% group_by(Country) %>% filter(Year == 2020) %>% filter(Country %in% temp[1:10]) %>%
ggplot(aes(x = Country, y = total_consumption)) +
geom_bar(stat = "identity", aes(fill = food_category)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
data <- data %>% drop_na() %>%  mutate(name = paste(Country, Year, food_category, sep = " "))
#unite(name, c("Country", "Year", "food_category"))
data6<-data%>%select_if(is.numeric)%>%select(-contains("total"), -Decade)%>%scale
rownames(data6)<- data$name
pca<-princomp(data6)
summary(pca, loadings=T)
eigval<-pca$sdev^2
varprop=round(eigval/sum(eigval),2)
ggplot()+
geom_bar(aes(y=varprop,x=1:4),stat="identity")+
xlab("")+
geom_path(aes(y=varprop, x = 1:4))+
geom_text(aes(x=1:4,y=varprop,label=round(varprop,2)),vjust=1,col="white",size=5)+
scale_y_continuous(breaks=seq(0,.6,.2),labels = scales::percent)+
scale_x_continuous(breaks=1:10)
data6df<-data.frame(PC1=pca$scores[,1], PC2=pca$scores[,2])
ggplot(data6df,aes(PC1, PC2))+geom_point()
Name<-data$name
pca$scores%>%as.data.frame%>%cbind(Name,.)%>%top_n(3,Comp.1)
pca$scores%>%as.data.frame%>%cbind(Name,.)%>%top_n(3,wt=desc(Comp.1))
pca$scores%>%as.data.frame%>%cbind(Name,.)%>%top_n(3,wt=Comp.2)
pca$scores%>%as.data.frame%>%cbind(Name,.)%>%top_n(3,wt=desc(Comp.2))
pca$loadings[1:4,1:2]%>%as.data.frame%>%rownames_to_column%>%
ggplot()+geom_hline(aes(yintercept=0),lty=2)+
geom_vline(aes(xintercept=0),lty=2)+ylab("PC2")+xlab("PC1")+
geom_segment(aes(x=0,y=0,xend=Comp.1,yend=Comp.2),arrow=arrow(),col="red")+
geom_label(aes(x=Comp.1*1.1,y=Comp.2*1.1,label=rowname))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lmtest)
library(sandwich)
library(plotROC)
#install.packages("glmnet")
library(glmnet)
happiness_data <- read.csv("2017.csv") %>%
drop_na() %>%
select(Country, HappinessScore) %>%
separate(Country, sep = ",", c("Country", NA))# %>%
#separate(Country, sep = "[(]", c("Country", NA))
job_data <- read.csv("data2.csv") %>%
drop_na() %>%
select(?..Country.Name, Country.Code, job) %>%
rename(Country = ?..Country.Name) %>%
separate(Country, sep = "[(]", c("Country", NA))# %>%
happiness_data <- read.csv("2017.csv") %>%
drop_na() %>%
select(Country, HappinessScore) %>%
separate(Country, sep = ",", c("Country", NA))# %>%
View(happiness_data)
job_data <- read.csv("data2.csv") #%>%
View(job_data)
colnames <- job_data %>% colnames
job_data <- job_data %>%
drop_na() %>%
select(colnames[1], Country.Code, job) %>%
rename(Country = colnames[1]) %>%
separate(Country, sep = "[(]", c("Country", NA))# %>%
happiness_data <- read.csv("2017.csv") %>%
drop_na() %>%
select(Country, HappinessScore) %>%
separate(Country, sep = ",", c("Country", NA))# %>%
#separate(Country, sep = "[(]", c("Country", NA))
job_data <- read.csv("data2.csv") #%>%
colnames <- job_data %>% colnames
job_data <- job_data %>%
drop_na() %>%
select(colnames[1], Country.Code, job) %>%
rename(Country = colnames[1]) %>%
separate(Country, sep = "[(]", c("Country", NA))# %>%
#separate(Country, sep = ",", c("Country", NA))
income_data <- read.csv("data3.csv") #%>%
colnames <- income_data %>% colnames
income_data <- income_data %>%
drop_na() %>%
rename(Country.Code = colnames[1])%>%
separate(Country, sep = ",", c("Country", NA)) #%>%
#separate(Country, sep = "[(]", c("Country", NA))
response <- read.csv("response.csv") #%>%
colnames <- response %>% colnames
response <- response %>%
rename(Country = colnames[1])
hd_data <- read.csv("human_development.csv") %>%
separate(Country, sep = ",", c("Country", NA))# %>%
#separate(Country, sep = "[(]", c("Country", NA))
setwd("C:/Users/ELEANOR/Documents/R/SDS348/Project3")
blogdown::serve_site()
setwd("C:/Users/ELEANOR/Documents/R/SDS348/Project3")
blogdown::serve_site()
